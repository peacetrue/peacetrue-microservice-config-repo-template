#授权服务配置（spring-security-oauth2 过期不完善的）
authorization-server:
  hostname: localhost
  port: 8510
  issuerUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}
  jwkSetUri: ${authorization-server.issuerUri}/.well-known/jwks.json

#所有应用共用的账号
spring:
  security:
    user:
      name: ${MICROSERVICE_SECURITY_USERNAME:peacetrue}
      password: ${MICROSERVICE_SECURITY_PASSWORD:password}

#注册客户端配置
eureka:
  instance:
    #优先使用 host 访问而非 ip 地址
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: ${MICROSERVICE_PROTOCOL:http}://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:8761/eureka

spring.profiles.include: uaa,rabbitmq

management.endpoints.web.exposure.include: "*"
# 禁用此项，以启用 ReactorLoadBalancerExchangeFilterFunction
spring.cloud.loadbalancer.ribbon.enabled: false

logging.level.root: DEBUG

---
#生产环境
spring.profiles: prod
spring.profiles.include: https,discons,log,rabbitLog

eureka.instance.hostname: peacetrue.cn
authorization-server.hostname: peacetrue.cn
spring.rabbitmq.host: peacetrue.cn

logging.level.root: INFO


---
#默认 http 协议，激活此配置切换到 https 协议
spring.profiles: https

MICROSERVICE_PROTOCOL: https

server:
  ssl:
    #服务端
    key-store: file://${user.home}/peacetrue.cn.jks
    key-alias: peacetrue.cn
    key-store-password: ${MICROSERVICE_SSL_PASSWORD:password}

#uaa https tomcat 默认 8443
authorization-server.port: 8443
eureka.instance.securePortEnabled: true

---
#默认输出到控制台，激活此配置切换到文件
spring.profiles: log

logging.file.name: logs/root.log

---
#禁用控制台日志，see https://stackoverflow.com/questions/43918414/how-to-disable-console-logging-in-spring-boot
spring.profiles: discons

logging.pattern.console: ''

---
#资源服务配置
spring.profiles: resourceserver

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuerUri: ${authorization-server.issuerUri}
          jwkSetUri: ${authorization-server.jwkSetUri}

---
#认证客户端配置
spring.profiles: authorizationclient

spring:
  security:
    oauth2:
      client:
        provider:
          peacetrue:
            issuerUri: ${authorization-server.issuerUri}
            jwkSetUri: ${authorization-server.jwkSetUri}
        registration:
          peacetrue:
            provider: peacetrue
            redirectUri: '{baseUrl}/login/oauth2/code/{registrationId}'

---
#授权服务配置（UAA 完善的），默认使用 spring-security-oauth2，激活此配置使用 UAA
spring.profiles: uaa

authorization-server:
  port: 8080
  issuerUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}/uaa/oauth/token
  jwkSetUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}/uaa/token_keys

---
#消息总线通过 rabbitmq 发送消息
spring.profiles: rabbitmq
spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

---
#通过 RabbitMQ 上传日志
spring.profiles: 'rabbitmq & rabbitmqLog'

#基于 java 命令执行路径
logging.config: file:../peacetrue-microservice-common/logback-spring.xml
