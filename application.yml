# common 配置，方便单机环境全局配置
common:
  protocol: ${MICROSERVICE_PROTOCOL:http}
  hostname: localhost
  url: ${common.protocol}://${common.hostname}

#授权服务配置（spring-security-oauth2 过期不完善的）
authorization-server:
  hostname: ${common.hostname}
  port: 8510
  issuerUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}
  #  jwkSetUri: ${authorization-server.issuerUri}/.well-known/jwks.json
  jwkSetUri: ${authorization-server.issuerUri}/oauth2/jwks

#所有应用共用的账号
spring:
  security:
    user:
      name: ${MICROSERVICE_SECURITY_USERNAME:peacetrue}
      password: ${MICROSERVICE_SECURITY_PASSWORD:password}

#注册客户端配置
eureka:
  instance:
    #优先使用 host 访问而非 ip 地址，ip 会有 https 证书问题
    hostname: ${common.hostname}
    leaseRenewalIntervalInSeconds: 10
    metadata-map:
      startup: ${random.int}
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
  client:
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${MICROSERVICE_PROTOCOL:http}://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:8761/eureka


management.endpoints.web.exposure.include: "*"
management.endpoint.health.show-details: ALWAYS
# 禁用此项，以启用 ReactorLoadBalancerExchangeFilterFunction
spring.cloud.loadbalancer.ribbon.enabled: false
# 默认禁用 zipkin
spring.zipkin.enabled: false

logging.level.root: info
logging.level.org.springframework: trace
logging.level.org.springframework.amqp: info
logging.level.org.springframework.cloud.sleuth: info
logging.level.com.github.peacetrue: debug
logging.level.org.apache.http: INFO
logging.level.io.netty.buffer: INFO
logging.level.com.netflix.discovery: INFO
#在项目内运行 java 的相对路径
logging.file.max-history: 1
#logging.config: file:peacetrue-microservice-common/logback-spring.xml

# uaa,rabbitmq
#spring.profiles.include: uaa

---
#默认环境，开发环境
spring.profiles: default
spring.profiles.include: consoleLog

---
#生产环境
spring.profiles: prod
# fileLog,rabbitmqLog,cmd,zipkin
spring.profiles.include: fileLog

common.hostname: www.peacetrue.cn
eureka.instance.hostname: ${common.hostname}
authorization-server.hostname: peacetrue.cn
spring.rabbitmq.host: ${common.hostname}
spring.zipkin.base-url: http://${common.hostname}:9411

logging.level.root: INFO

---
#默认 http 协议，激活此配置切换到 https 协议
spring.profiles: https

MICROSERVICE_PROTOCOL: https
common.protocol: ${MICROSERVICE_PROTOCOL}

server:
  ssl:
    #服务端
    key-store: file://${user.home}/peacetrue.cn.jks
    key-alias: peacetrue.cn
    key-store-password: ${MICROSERVICE_SSL_PASSWORD:password}

#uaa https tomcat 默认 8443
authorization-server.port: 8443
eureka.instance.securePortEnabled: true

---
#zipkin，默认禁用，激活此项以启用
spring.profiles: zipkin
spring.zipkin.enabled: true

---
#默认输出到控制台，激活此配置切换到文件
spring.profiles: fileLog

logging.file.name: logs/root.log

---
#命令行
spring.profiles: cmd

# 通过命令行启动会在模块内运行
#logging.config: file:../peacetrue-microservice-common/logback-spring.xml

---
#资源服务配置
spring.profiles: resourceserver

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
#          issuerUri: ${authorization-server.issuerUri}
          jwkSetUri: ${authorization-server.jwkSetUri}

---
#认证客户端配置
spring.profiles: authorizationclient

spring:
  security:
    oauth2:
      client:
        provider:
          spring:
            #            issuerUri: ${authorization-server.issuerUri}
            jwkSetUri: ${authorization-server.jwkSetUri}
            authorization-uri: ${authorization-server.issuerUri}/oauth2/authorize
            token-uri: ${authorization-server.issuerUri}/oauth2/token
#        registration:
#          common:
#            provider: peacetrue
#            redirectUri: '{baseUrl}/login/oauth2/code/{registrationId}'

---
#授权服务配置（UAA 完善的），默认使用 spring-security-oauth2，激活此配置使用 UAA
spring.profiles: uaa

authorization-server:
  port: 8080
  issuerUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}/uaa/oauth/token
  jwkSetUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}/uaa/token_keys

---
#消息总线通过 rabbitmq 发送消息
spring.profiles: rabbitmq
spring:
  rabbitmq:
    host: ${common.hostname}
    port: 5672
    username: guest
    password: guest

---
# mac 环境 docker 配置
spring.profiles: dockerMac

common.hostname: host.docker.internal
